{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aayus\\\\Desktop\\\\changelog-generator\\\\frontend\\\\src\\\\PublicChangelog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ChangelogGenerator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PublicChangelog() {\n  _s();\n  const [changelogs, setChangelogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sortOrder, setSortOrder] = useState('desc');\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    fetchChangelogs();\n  }, [sortOrder]);\n  const fetchChangelogs = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/changelogs?order=${sortOrder}`);\n      setChangelogs(response.data);\n    } catch (error) {\n      setError('Error fetching changelogs');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const filteredChangelogs = changelogs.filter(log => log.content.toLowerCase().includes(searchTerm.toLowerCase()) || log.version.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"changelog-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Changelog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Latest updates and improvements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search changelogs...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sortOrder,\n        onChange: e => setSortOrder(e.target.value),\n        className: \"sort-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"desc\",\n          children: \"Newest first\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"asc\",\n          children: \"Oldest first\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading changelogs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"changelog-list\",\n      children: filteredChangelogs.map(log => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changelog-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"changelog-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"version\",\n            children: [\"Version \", log.version]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"date\",\n            children: new Date(log.date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"changelog-content\",\n          children: log.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)]\n      }, log.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(PublicChangelog, \"6eAbakFlRf319IMnu2YMAhWXEJA=\");\n_c = PublicChangelog;\nexport default PublicChangelog;\nvar _c;\n$RefreshReg$(_c, \"PublicChangelog\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PublicChangelog","_s","changelogs","setChangelogs","loading","setLoading","error","setError","sortOrder","setSortOrder","searchTerm","setSearchTerm","fetchChangelogs","response","get","data","filteredChangelogs","filter","log","content","toLowerCase","includes","version","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","Date","date","toLocaleDateString","id","_c","$RefreshReg$"],"sources":["C:/Users/aayus/Desktop/changelog-generator/frontend/src/PublicChangelog.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './ChangelogGenerator.css';\r\n\r\nfunction PublicChangelog() {\r\n  const [changelogs, setChangelogs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [sortOrder, setSortOrder] = useState('desc');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchChangelogs();\r\n  }, [sortOrder]);\r\n\r\n  const fetchChangelogs = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/changelogs?order=${sortOrder}`);\r\n      setChangelogs(response.data);\r\n    } catch (error) {\r\n      setError('Error fetching changelogs');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const filteredChangelogs = changelogs.filter(log =>\r\n    log.content.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    log.version.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"changelog-container\">\r\n      <div className=\"header\">\r\n        <h1>Changelog</h1>\r\n        <p>Latest updates and improvements</p>\r\n      </div>\r\n\r\n      <div className=\"controls\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search changelogs...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          className=\"search-input\"\r\n        />\r\n        <select\r\n          value={sortOrder}\r\n          onChange={(e) => setSortOrder(e.target.value)}\r\n          className=\"sort-select\"\r\n        >\r\n          <option value=\"desc\">Newest first</option>\r\n          <option value=\"asc\">Oldest first</option>\r\n        </select>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <div className=\"loading\">Loading changelogs...</div>\r\n      ) : error ? (\r\n        <div className=\"error-message\">{error}</div>\r\n      ) : (\r\n        <div className=\"changelog-list\">\r\n          {filteredChangelogs.map((log) => (\r\n            <div key={log.id} className=\"changelog-item\">\r\n              <div className=\"changelog-header\">\r\n                <h2 className=\"version\">Version {log.version}</h2>\r\n                <span className=\"date\">\r\n                  {new Date(log.date).toLocaleDateString()}\r\n                </span>\r\n              </div>\r\n              <pre className=\"changelog-content\">{log.content}</pre>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PublicChangelog;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,MAAM,CAAC;EAClD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdgB,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACJ,SAAS,CAAC,CAAC;EAEf,MAAMI,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,0CAA0CN,SAAS,EAAE,CAAC;MACvFL,aAAa,CAACU,QAAQ,CAACE,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,QAAQ,CAAC,2BAA2B,CAAC;IACvC,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMW,kBAAkB,GAAGd,UAAU,CAACe,MAAM,CAACC,GAAG,IAC9CA,GAAG,CAACC,OAAO,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACX,UAAU,CAACU,WAAW,CAAC,CAAC,CAAC,IAC5DF,GAAG,CAACI,OAAO,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACX,UAAU,CAACU,WAAW,CAAC,CAAC,CAC7D,CAAC;EAED,oBACErB,OAAA;IAAKwB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCzB,OAAA;MAAKwB,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBzB,OAAA;QAAAyB,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB7B,OAAA;QAAAyB,QAAA,EAAG;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eAEN7B,OAAA;MAAKwB,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBzB,OAAA;QACE8B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,sBAAsB;QAClCC,KAAK,EAAErB,UAAW;QAClBsB,QAAQ,EAAGC,CAAC,IAAKtB,aAAa,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CR,SAAS,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACF7B,OAAA;QACEgC,KAAK,EAAEvB,SAAU;QACjBwB,QAAQ,EAAGC,CAAC,IAAKxB,YAAY,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC9CR,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAEvBzB,OAAA;UAAQgC,KAAK,EAAC,MAAM;UAAAP,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1C7B,OAAA;UAAQgC,KAAK,EAAC,KAAK;UAAAP,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELxB,OAAO,gBACNL,OAAA;MAAKwB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GAClDtB,KAAK,gBACPP,OAAA;MAAKwB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAElB;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAE5C7B,OAAA;MAAKwB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BR,kBAAkB,CAACmB,GAAG,CAAEjB,GAAG,iBAC1BnB,OAAA;QAAkBwB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC1CzB,OAAA;UAAKwB,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/BzB,OAAA;YAAIwB,SAAS,EAAC,SAAS;YAAAC,QAAA,GAAC,UAAQ,EAACN,GAAG,CAACI,OAAO;UAAA;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClD7B,OAAA;YAAMwB,SAAS,EAAC,MAAM;YAAAC,QAAA,EACnB,IAAIY,IAAI,CAAClB,GAAG,CAACmB,IAAI,CAAC,CAACC,kBAAkB,CAAC;UAAC;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACN7B,OAAA;UAAKwB,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAEN,GAAG,CAACC;QAAO;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAP9CV,GAAG,CAACqB,EAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQX,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC3B,EAAA,CAzEQD,eAAe;AAAAwC,EAAA,GAAfxC,eAAe;AA2ExB,eAAeA,eAAe;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}